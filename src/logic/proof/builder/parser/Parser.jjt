options{  //Make lexer case insensitive
  IGNORE_CASE = true;  USER_TOKEN_MANAGER = true;  MULTI = true;  static = false;}PARSER_BEGIN(Parser)package logic.proof.builder.parser;public class Parser{}PARSER_END(Parser)void Formula() #void :{}{  f1() < EOF >}void f1() #void :{}{  f2()  (    (      < IMPLIES > f2() #Implies(2)  )|  (    < EQUIVALENT > f2() #Equivalent(2)))*}void f2() #void :{}{  f3()  (    (      < AND > f3()    ) #And(2)|  (    < OR > f3()  ) #Or(2))*}void f3() #void :{}{  < PREDICATE > #Predicate| (< NOT >  (< PREDICATE > #Predicate | < LBRACKET > f1() <RBRACKET >)  #Not(1) )| (< LBRACKET > f1() <RBRACKET >)}
void Predicate() #void : {}{<PREDICATE>}